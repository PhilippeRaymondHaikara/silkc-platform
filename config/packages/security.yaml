security:
    encoders:
        App\Entity\User:
            algorithm: auto

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api:
            anonymous: true
            lazy: true
            stateless: true # Authentification demandée à chaque requête
            json_login:
                check_path: api_login
            pattern: ^/api/
            guard:
                authenticators:
                    - App\Security\TokenAuthenticator
        main:
            anonymous: true
            lazy: true
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                target: app_login

    access_control:
        - { path: ^/admin, roles: [ ROLE_ADMIN, ROLE_SUPER_ADMIN ], requires_channel: '%router.request_context.scheme%' }
        - { path: ^/api/forgot_password$, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: '%router.request_context.scheme%' }
        - { path: ^/api/signup$, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: '%router.request_context.scheme%' }
        - { path: ^/apip/, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: '%router.request_context.scheme%' }
        - { path: ^/api/, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: '%router.request_context.scheme%' }
        - { path: ^/api/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: '%router.request_context.scheme%' }
        - { path: ^/api/validate_account, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: '%router.request_context.scheme%' }
        - { path: ^/api, roles: ROLE_USER, requires_channel: '%router.request_context.scheme%' }
        - { path: ^/$, roles: ROLE_USER, requires_channel: '%router.request_context.scheme%' }
        - { path: ^/account$, roles: ROLE_USER, requires_channel: '%router.request_context.scheme%' }
        - { path: ^/institution$, roles: ROLE_USER, requires_channel: '%router.request_context.scheme%' }

    role_hierarchy:
        ROLE_SUPER_ADMIN: ROLE_ADMIN
        ROLE_ADMIN: ROLE_MODERATOR
        ROLE_MODERATOR: ROLE_USER
